[{"path":"https://amsterdamumc.github.io/AMSTEL/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 AMSTEL authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick Thoral. Author, maintainer. Paul Elbers. Author. Amsterdam UMC. Author. Amsterdam Medical Data Science. Author. Stichting LaLa. Author. Gaia Scientific. Author. EHDEN Foundation. Funder.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thoral P, Elbers P, Amsterdam UMC, Amsterdam Medical Data Science, Stichting LaLa, Gaia Scientific (2024). amstel: AmsterdamUMCdb extracting, transforming loading (ETL) OMOP Common Data Model. R package version 0.9.0.0000, https://amsterdamumc.github.io/AMSTEL/.","code":"@Manual{,   title = {amstel: AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model},   author = {Patrick Thoral and Paul Elbers and {Amsterdam UMC} and {Amsterdam Medical Data Science} and {Stichting LaLa} and {Gaia Scientific}},   year = {2024},   note = {R package version 0.9.0.0000},   url = {https://amsterdamumc.github.io/AMSTEL/}, }"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"amstel-amsterdamumcdb---omop-common-data-model-etl","dir":"","previous_headings":"","what":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"AMSTEL GitHub respository amstel R package developed convert AmsterdamUMCdb, first freely accessible European intensive care database, Observational Medical Outcomes Partnership Common Data Model version 5.4 (OMOP CDM 5.4) maintained Observational Health Data Sciences Informatics (OHDSI) community. repository contains collection resources, mainly documentation, R scripts, SQL queries mapping files, form ETL (Extract, Transform, Load) process converting AmsterdamUMCdb OMOP Common Data Model. ETL AmsterdamUMCdb based excellent well-documented ETL Sythea project available : https://github.com/OHDSI/ETL-Synthea. document describe steps taken convert AmsterdamUMCdb OMOP Common Data Model. steps needed develop ETL, actual conversion AmsterdamUMC CDM, added remark Development . Currently, create environment contains complete OHDSI software stack, number installation steps taken able fully utilize data CDM. Since many tutorials written Microsoft Windows, document explicitly contains documentation use full open source environment running Ubuntu, equally well run modern operation system. AMSTEL project collaboration Center Critical Care Computational Intelligence Amsterdam UMC, Amsterdam Medical Data Science, Stichting LaLa, Gaia Scientific European Health Data & Evidence Network.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"project received funding Innovative Medicines Initiative 2 Joint Undertaking (JU) grant agreement 806968. JU receives support European Union’s Horizon 2020 research innovation programme EFPIA.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"AmsterdamUMCDb version 1.0.2 installed supported relational database management system (RDBMS), preferably PostgreSQL. Read access database containing AmsterdamUMCdb Read/write access (empty) database creating required CDM schemas 600 GB disk space conversion, 300 GB successful conversion. Development performed Hyper-V based Ubuntu 22.04 LTS virtual machine (12 virtual cores, 64 GB RAM, 1 TB SSD based virtual disk) Note: SQL queries repository written OHDSI SQL, subset SQL Server SQL dialect. functions part amstel package perform database transactions make use OHDSI DatabaseConnector package convert queries dialect SQL queries work various database systems. However, testing currently performed PostgreSQL, since OHDSI WebAPI dropped support RDBMS requires PostgreSQL store data.","code":""},{"path":[]},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-r","dir":"","previous_headings":"","what":"Install R","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo apt-get install r-base"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-rstudio-server","dir":"","previous_headings":"","what":"Install RStudio server","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Follow instructions https://posit.co/download/rstudio-server/ determine correct version. Alteratively, install R-studio Desktop, intend use R local machine .","code":"sudo apt-get install gdebi-core wget https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2023.03.0-386-amd64.deb sudo gdebi rstudio-server-2023.03.0-386-amd64.deb"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"clone-the-amstel-github-repository","dir":"","previous_headings":"","what":"Clone the AMSTEL Github repository","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Amstel Github respository contains mapping data folder structure succcesfully combine required data running ETL.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-git","dir":"","previous_headings":"","what":"Install git","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo apt install git"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"clone-the-repository","dir":"","previous_headings":"","what":"Clone the repository","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"git clone https://github.com/AmsterdamUMC/AMSTEL"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-java-development-kit","dir":"","previous_headings":"","what":"Install Java Development Kit","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"install default Java Development Kit","code":"sudo apt install default-jdk"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"setup-a-new-postgresql-user","dir":"","previous_headings":"","what":"Setup a new PostgreSQL user","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"working (virtual) machine differs database server, may required set new user Superuser privileges using pgAdmin (default postgres). addition, standard postgreSQL setup require adding following line pg_hba.conf file root PostgreSQL installation path allow machine connect databaser server:","code":"# add permission to query database from OHDSI (virtual) machine host all <<your username>> <<your hostname>> scram-sha-256"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-whiterabbit","dir":"","previous_headings":"","what":"Install WhiteRabbit","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Development OHDSI WhiteRabbit application analyse structure contents database preparation designing ETL. comes RabbitInAHat, application interactive design ETL OMOP Common Data Model help scan report generated White Rabbit. Required steps Install application following instructions WhiteRabbit Github page. Run WhiteRabbit connect PostgreSQL database generate report. report generated WhiteRabbit AmsterdamUMCdb can found . ETL design developed AmsterdamUMCdb using RabbitInAHat can found . can open file within RabbitInAHat application.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"download-vocabularies-from-athena","dir":"","previous_headings":"","what":"Download Vocabularies from Athena","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"(standard) vocabularies important part Common Data Model. Open https://athena.ohdsi.org/search-terms/start. Login Create new account using Register Click Download, select (default) vocabularies Unzip files place vocabulary folder.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-usagi","dir":"","previous_headings":"","what":"Install Usagi","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Development OHDSI Usagi application help create mappings coding systems Vocabulary standard concepts. files containing source (AmsterdamUMCdb) concepts can found . (final) mapping files created using Usagi used ETL can found .","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"setup-google-translate-cloud-api","dir":"","previous_headings":"","what":"Setup Google Translate Cloud API","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Development Usagi software uses names concepts find matching standard concept Vocabulary. Since AmsterdamUMCdb sourced Dutch patient data management system, concepts can used directly find corresponding English concept. Follow tutorial setup R use Google Translate translate Dutch concepts English improving matching Usagi mapping tool: https://github.com/ropensci/googleLanguageR creating JSON credentials file, save file ~/.config/amstel/credentials.json","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-hades","dir":"","previous_headings":"","what":"Install Hades","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"OHDSI HADES set open source R packages large scale analytics, including population characterization, population-level causal effect estimation, patient-level prediction. context th ETL, used perform checks aggregations Achilles DataQualityDashboard packages.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-cmake","dir":"","previous_headings":"","what":"Install cmake","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo apt install cmake libsodium-dev"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-hades-packages","dir":"","previous_headings":"","what":"Install HADES packages","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Follow tutorial : https://ohdsi.github.io/Hades/installingHades.html. Please note requirement setting GitHub Personal Access Token (PAT).","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-the-amstel-package","dir":"","previous_headings":"","what":"Install the amstel package","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Open RStudio, choose File > Open Project... open amstel.Rproj project cloned AMSTEL Github repository. R console, run: install amstel package GitHub imports package R environment.","code":"# install the `amstel` package from the github repository install.packages(\"remotes\") remotes::install_github(\"AmsterdamUMC/AMSTEL\")   library(amstel)"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"configure-database-connections","dir":"","previous_headings":"","what":"Configure database connections","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"ETL can start, need define settings connect database servers, optionally change names schemas ’d like use store CDM data . addition, can change locations number required data sources, including vocabularies, recommended leave defaults. R console, run: wil create new configuration file (config.yaml) OS specified location user settings opens file RStudio editing. settings kan kept defaults, please make sure set correct database type, server, username password database schemas (AmsterdamUMCdb, cdm, results, temp).","code":"amstel::create_config()"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"download-required-database-drivers","dir":"","previous_headings":"","what":"Download required database drivers","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Based configuration file , correct drivers connect source target databases need downloaded . drivers default, stored , unless location changed config.yaml file. R console, run:","code":"amstel::download_drivers()"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"run-the-etl","dir":"","previous_headings":"","what":"Run the ETL","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"continue using RStudio running ETL, recommended run ETL background job since ETL, data quality checks aggregation can take hours days depending performance database server. Background Jobs panel, choose Start Background Job, use Browse select /inst/scripts/ETL_background_job.R script. Make sure Working Directory set directory local clone AMSTEL GitHub repository, unless specified absolute path repository configuration.yaml file. Alternatively, R console, also run: ETL, process logged console wel logs folder, unless defaults changed.","code":"amstel::etl()"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-atlas","dir":"","previous_headings":"","what":"Install ATLAS","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"OHDSI ATLAS open source software tool researchers conduct scientific analyses standardized observational data converted OMOP Common Data Model V5. also enables graphically browse reports generated ACHILLES aggregation tool. install ATLAS, need install dependencies first. ## Install WebAPI OHDSI WebAPI contains OHDSI RESTful services can called OHDSI applications including ATLAS. Multiple steps needed install WebAPI. ### Install Java 8 JDK running Maven make sure set build environment version 8 JRE","code":"sudo apt-get install openjdk-8-jdk export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/ export JRE_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"maven","dir":"","previous_headings":"","what":"Maven","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"latest versions can found : https://maven.apache.org/download.cgi","code":"sudo apt install maven"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"tomcat-80","dir":"","previous_headings":"","what":"Tomcat 8.0","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"WebAPI built using Java 8 SDK currently requires Tomcat 8.0, due changes newer versions according Apache Tomcat Documentation:","code":"Users of Tomcat 10 onwards should be aware that, as a result of the move from Java EE to Jakarta EE as part of the transfer of Java EE to the Eclipse Foundation, the primary package for all implemented APIs has changed from javax.* to jakarta.*. This will almost certainly require code changes to enable applications to migrate from Tomcat 9 and earlier to Tomcat 10 and later. A migration tool has been developed to aid this process."},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"create-a-separate-tomcat-user","dir":"","previous_headings":"Tomcat 8.0","what":"Create a separate Tomcat user","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo groupadd tomcat  sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"download-the-latest-tomcat-80-binaries","dir":"","previous_headings":"Tomcat 8.0","what":"Download the latest Tomcat 8.0 binaries","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"cd /tmp  wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.95/bin/apache-tomcat-8.5.95.tar.gz"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"create-installation-folder","dir":"","previous_headings":"Tomcat 8.0","what":"Create installation folder","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo mkdir /opt/tomcat  cd /opt/tomcat"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"extract-files","dir":"","previous_headings":"Tomcat 8.0","what":"Extract files","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo tar xzvf /tmp/apache-tomcat-8.5.95.tar.gz -C /opt/tomcat --strip-components=1  sudo chgrp -R tomcat /opt/tomcat  sudo chmod -R g+r conf  sudo chmod g+x conf  sudo chown -R tomcat webapps/ work/ temp/ logs/"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"create-service-for-tomcat","dir":"","previous_headings":"Tomcat 8.0","what":"create service for tomcat","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"sudo nano /etc/systemd/system/tomcat.service  sudo systemctl daemon-reload"},{"path":[]},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"clone-repository","dir":"","previous_headings":"Install WebAPI","what":"Clone repository","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"git clone https://github.com/OHDSI/WebAPI.git"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"checkout-release","dir":"","previous_headings":"Install WebAPI","what":"Checkout release","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"","code":"cd WebAPI/  git checkout refs/tags/v2.13.0"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"create-settingsxml","dir":"","previous_headings":"Install WebAPI","what":"Create settings.xml","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"root WebAPI repository folder, file named sample_settings.xml. Copy file new folder WebAPIConfig rename settings.xml.","code":"mkdir WebAPIConfig  cp sample_settings.xml WebAPIConfig/settings.xml"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"configure-the-settingsxml-file","dir":"","previous_headings":"Install WebAPI","what":"Configure the settings.xml file","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"See information specified offical documentation configure Maven profile settings.xml file nano WebAPIConfig/settings.xml","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"building-the-webapi-war-file-using-maven","dir":"","previous_headings":"Install WebAPI","what":"Building the WebAPI .war file using Maven","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"mvn clean package -DskipUnitTests -DskipITtests -s WebAPIConfig/settings.xml -P webapi-postgresql","code":""},{"path":[]},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"edit-the-tomcat-usersxml-file","dir":"","previous_headings":"Install WebAPI > Deploy WebAPI to Tomcat","what":"Edit the tomcat-users.xml file","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"sudo nano /opt/tomcat/conf/tomcat-users.xml Add <tomcat-users> block Edit settings allow large uploads: sudo nano /opt/tomcat/webapps/manager/WEB-INF/web.xml Update read:","code":"<role rolename=\"manager-gui\"/>   <user username=\"tomcat\" password=\"<<my_tomcat_password>>\" roles=\"manager-gui\"/> <multipart-config>       <!-- 50MB max -->       <max-file-size>52428800<\/max-file-size>       <max-request-size>52428800<\/max-request-size>       <file-size-threshold>0<\/file-size-threshold>     <\/multipart-config> <multipart-config>       <!-- 1024MB max -->       <max-file-size>1073741824<\/max-file-size>       <max-request-size>1073741824<\/max-request-size>       <file-size-threshold>0<\/file-size-threshold>     <\/multipart-config>"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"run-tomcat","dir":"","previous_headings":"Install WebAPI","what":"Run Tomcat","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"sudo /opt/tomcat/bin/startup.sh run","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"deploy-webapi-using-tomcat-application-manager","dir":"","previous_headings":"Install WebAPI","what":"Deploy WebAPI using Tomcat Application Manager","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Open web browser, navigate http://localhost:8080/manager prompted credentials. Enter username tomcat password <<my_tomcat_password>> configured step . see manager screen. bottom manager screen, see area labled WAR file deploy. Click Choose File button navigate location WebAPI.war file created one previous steps. Click Deploy button deploy start WebAPI.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"verify-connection","dir":"","previous_headings":"Install WebAPI","what":"Verify connection","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Verify succesfull installation WebAPI navigating : http://localhost:8080/WebAPI/info. receive json object containg version info, e.g.","code":"{\"version\":\"2.13.0\",\"buildInfo\":{\"artifactVersion\":\"WebAPI 2.13.0\",\"build\":\"NA\",\"timestamp\":\"Fri Oct 27 23:25:17 UTC 2023\",\"branch\":\"b4acb3a27962207aec132b5e79dafa181c41f1da\",\"commitId\":\"b4acb3a\",\"atlasRepositoryInfo\":{\"milestoneId\":42,\"releaseTag\":\"*\"},\"webapiRepositoryInfo\":{\"milestoneId\":43,\"releaseTag\":\"*\"}},\"configuration\":{\"security\":{\"samlActivated\":false,\"enabled\":false,\"samlEnabled\":false},\"vocabulary\":{\"solrEnabled\":true},\"person\":{\"viewDatesPermitted\":false},\"plugins\":{\"atlasgisEnabled\":false},\"heracles\":{\"smallCellCount\":\"5\"}}}"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"create-webapi-tables","dir":"","previous_headings":"","what":"Create WebAPI tables","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Creates required WebAPI tables based CDM data insert source records connection AmsterdamUMCdb CDM. R console, run: Refresh WebAPI show added CDM instance: http://localhost:8080/WebAPI/source/refresh can check current sources opening: http://localhost:8080/WebAPI/source/sources","code":"amstel::create_webapi_tables() [{\"sourceId\":3,\"sourceName\":\"Amsterdam University Medical Centers Database v1.0.2\",\"sourceDialect\":\"postgresql\",\"sourceKey\":\"AmsterdamUMCdb v1.0.2\",\"daimons\":[{\"sourceDaimonId\":2,\"daimonType\":\"CDM\",\"tableQualifier\":\"cdm_54\",\"priority\":0},{\"sourceDaimonId\":3,\"daimonType\":\"Vocabulary\",\"tableQualifier\":\"cdm_54\",\"priority\":1},{\"sourceDaimonId\":4,\"daimonType\":\"Results\",\"tableQualifier\":\"cdm_results\",\"priority\":1},{\"sourceDaimonId\":5,\"daimonType\":\"Temp\",\"tableQualifier\":\"cdm_temp\",\"priority\":0}]}] [{\"sourceId\":3,\"sourceName\":\"Amsterdam University Medical Centers Database v1.0.2\",\"sourceDialect\":\"postgresql\",\"sourceKey\":\"AmsterdamUMCdb v1.0.2\",\"daimons\":[{\"sourceDaimonId\":2,\"daimonType\":\"CDM\",\"tableQualifier\":\"cdm_54\",\"priority\":0},{\"sourceDaimonId\":3,\"daimonType\":\"Vocabulary\",\"tableQualifier\":\"cdm_54\",\"priority\":1},{\"sourceDaimonId\":4,\"daimonType\":\"Results\",\"tableQualifier\":\"cdm_results\",\"priority\":1},{\"sourceDaimonId\":5,\"daimonType\":\"Temp\",\"tableQualifier\":\"cdm_temp\",\"priority\":0}]}]"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-apache-webserver","dir":"","previous_headings":"","what":"Install Apache Webserver","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"OHDSI Setup guide suggest default setup. Apache 2 Webserver:","code":"sudo apt install apache2"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-nodejs","dir":"","previous_headings":"","what":"Install NodeJS","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Download import Nodesource GPG key Create deb repository Run Update Install","code":"sudo apt-get update sudo apt-get install -y ca-certificates curl gnupg sudo mkdir -p /etc/apt/keyrings curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg NODE_MAJOR=21 echo \"deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main\" | sudo tee /etc/apt/sources.list.d/nodesource.list sudo apt-get update sudo apt-get install nodejs -y"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"install-ohdsi-atlas","dir":"","previous_headings":"","what":"Install OHDSI ATLAS","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Download lastest release Checkout latest release Build latest release Copy ATLAS build Apache Webserver","code":"cd ~/git git clone https://github.com/OHDSI/ATLAS.git cd ATLAS/ git fetch --tags latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) git checkout $latestTag npm run build sudo cp -r ./ /var/www/html/atlas/"},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"run-atlas","dir":"","previous_headings":"","what":"Run ATLAS","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"Navigate http://localhost/atlas. now running instance ATLAS able browse aggregated data perform analyses.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/index.html","id":"trivia","dir":"","previous_headings":"","what":"Trivia:","title":"AmsterdamUMCdb extracting, transforming and loading (ETL) into the OMOP Common Data Model","text":"AMSTEL: anagram AMS (Amsterdam) ETL (Extract, Transform, Load), named river flowing city Amsterdam","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/achilles.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs ACHILLES on AmsterdamUMCdb converted to the OMOP CDM — achilles","title":"Runs ACHILLES on AmsterdamUMCdb converted to the OMOP CDM — achilles","text":"function runs Automated Characterization Health Information Large-Scale Longitudinal Evidence Systems (ACHILLES) Achilles provides descriptive statistics OMOP CDM database.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/achilles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs ACHILLES on AmsterdamUMCdb converted to the OMOP CDM — achilles","text":"","code":"achilles()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/alter_system_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Alters PostgreSQL System settings. — alter_system_settings","title":"Alters PostgreSQL System settings. — alter_system_settings","text":"function alters PostgreSQL settings reduce house keeping bulk inserting records.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/alter_system_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alters PostgreSQL System settings. — alter_system_settings","text":"","code":"alter_system_settings(defaults = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/alter_system_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alters PostgreSQL System settings. — alter_system_settings","text":"defaults Determines apply default optimized PostgreSQL settings. Default: FALSE","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/alter_system_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alters PostgreSQL System settings. — alter_system_settings","text":"function requires configured config.yaml file created using amstel::create_config(). settings require server restart.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/cloud_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Small wrapper for authentication https://github.com/ropensci/googleLanguageR.\nAllows authentication using Google Cloud API credentials\nin default user folder' — cloud_auth","title":"Small wrapper for authentication https://github.com/ropensci/googleLanguageR.\nAllows authentication using Google Cloud API credentials\nin default user folder' — cloud_auth","text":"Small wrapper authentication https://github.com/ropensci/googleLanguageR. Allows authentication using Google Cloud API credentials default user folder'","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/cloud_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small wrapper for authentication https://github.com/ropensci/googleLanguageR.\nAllows authentication using Google Cloud API credentials\nin default user folder' — cloud_auth","text":"","code":"cloud_auth()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/cloud_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small wrapper for authentication https://github.com/ropensci/googleLanguageR.\nAllows authentication using Google Cloud API credentials\nin default user folder' — cloud_auth","text":"","code":"cloud_auth()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to database — connect","title":"Connect to database — connect","text":"Connects AmsterdamUMCdb CDM database based config.yaml user config folder.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to database — connect","text":"","code":"connect(database = \"cdm\", default_schema = \"\")"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to database — connect","text":"database Database use, either \"amsterdamumcdb\",  \"cdm\", \"results\", \"temp\". Default: \"cdm\" default_schema Default schema use search path. default, set value schema configuration section database","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to database — connect","text":"DatabaseConnector Connection object","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to database — connect","text":"","code":"conn <- connect() #> Connecting using PostgreSQL driver #> Executing SQL took 0.134 secs conn <- connect(\"amsterdamumcdb\") #> Connecting using PostgreSQL driver #> Executing SQL took 0.00687 secs"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Indices on Common Data Model Tables. — create_cdm_indices","title":"Create Indices on Common Data Model Tables. — create_cdm_indices","text":"function creates indices tables CDM.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Indices on Common Data Model Tables. — create_cdm_indices","text":"","code":"create_cdm_indices()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Indices on Common Data Model Tables. — create_cdm_indices","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create indices tables Common Data Model. function assumes amstel::create_cdm_tables() run successfully.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Common Data Model tables — create_cdm_tables","title":"Create Common Data Model tables — create_cdm_tables","text":"function creates required CDM tables using executeDdl function OHDSI/CommonDataModel package.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Common Data Model tables — create_cdm_tables","text":"","code":"create_cdm_tables(use_cdm_package = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Common Data Model tables — create_cdm_tables","text":"use_cdm_package Specifies whether OHDSI CommonDataModel::executeDdl function used execute DDL (Data Definition Language) internal functions use SQL code allow conditional creation tables. Default: FALSE","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Common Data Model tables — create_cdm_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create Common Data Model tables using either amstel::create_data_tables amstel::create_vocabulary_tables functions executeDdl function OHDSI/CommonDataModel package.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cdm_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Common Data Model tables — create_cdm_tables","text":"","code":"create_cdm_tables() #> Using github PAT from envvar GITHUB_PAT #> Skipping install of 'CommonDataModel' from a github remote, the SHA1 (43f65730) has not changed since last install. #>   Use `force = TRUE` to force installation #> Connecting using PostgreSQL driver #> Executing SQL took 0.00793 secs #> Connecting using PostgreSQL driver #> Executing SQL took 0.1 secs #> Connecting using PostgreSQL driver #> Executing SQL took 0.0153 secs"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cohort_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Common Data Model Results Cohort Tables — create_cohort_tables","title":"Create the Common Data Model Results Cohort Tables — create_cohort_tables","text":"function creates Common Data Model Cohort tables, can used define cohorts based criteria using standard concepts. example cohort created select patients receiving mechanical ventilation.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cohort_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Common Data Model Results Cohort Tables — create_cohort_tables","text":"","code":"create_cohort_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cohort_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the Common Data Model Results Cohort Tables — create_cohort_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create cohort tables. addition, CDM schema needs populated CDM data vocabulary tables.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_cohort_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Common Data Model Results Cohort Tables — create_cohort_tables","text":"","code":"create_cdm_tables() #> Using github PAT from envvar GITHUB_PAT #> Skipping install of 'CommonDataModel' from a github remote, the SHA1 (43f65730) has not changed since last install. #>   Use `force = TRUE` to force installation #> Connecting using PostgreSQL driver #> Executing SQL took 0.00698 secs #> Connecting using PostgreSQL driver #> Executing SQL took 0.0932 secs #> Connecting using PostgreSQL driver #> Executing SQL took 0.122 secs create_vocabulary_tables() #> Connecting using PostgreSQL driver #> Executing SQL took 0.0271 secs create_cohort_tables() #> Connecting using PostgreSQL driver #> Executing SQL took 0.092 secs"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates amstel configuration file — create_config","title":"Creates amstel configuration file — create_config","text":"Creates config.yaml configuration file default OS-defined user configuration folder setting access databases files","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates amstel configuration file — create_config","text":"","code":"create_config(is_missing = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates amstel configuration file — create_config","text":"is_missing Used internally change message based configuration file missing initialization. Default: FALSE.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates amstel configuration file — create_config","text":"","code":"amstel::create_config() #> Configuration file already exists at: ~/.config/amstel/config.yaml"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_data_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Common Data Model Clinical Data tables — create_data_tables","title":"Create the Common Data Model Clinical Data tables — create_data_tables","text":"function creates Common Data Model Clinical Data tables, e.g. tables exception tables related Standard Vocabularies Standard Concepts.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_data_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Common Data Model Clinical Data tables — create_data_tables","text":"","code":"create_data_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_data_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the Common Data Model Clinical Data tables — create_data_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create WebAPI tables.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_data_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Common Data Model Clinical Data tables — create_data_tables","text":"","code":"create_data_tables() #> Connecting using PostgreSQL driver #> Executing SQL took 0.124 secs"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a new database environment (database schemes) for AmsterdamUMCdb\nand the CDM data and results schemes for testing and/or\nexample purposes. — create_environment","title":"Creates a new database environment (database schemes) for AmsterdamUMCdb\nand the CDM data and results schemes for testing and/or\nexample purposes. — create_environment","text":"Creates new database environment (database schemes) AmsterdamUMCdb CDM data results schemes testing /example purposes.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a new database environment (database schemes) for AmsterdamUMCdb\nand the CDM data and results schemes for testing and/or\nexample purposes. — create_environment","text":"","code":"create_environment(name = \"test\", clean = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a new database environment (database schemes) for AmsterdamUMCdb\nand the CDM data and results schemes for testing and/or\nexample purposes. — create_environment","text":"name Name environment create. Default: \"test\" clean Specifies whether start completely empty schemes dropping existing ones. WARNING: completely remove schemes specified user owner schemes. Default: FALSE","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a new database environment (database schemes) for AmsterdamUMCdb\nand the CDM data and results schemes for testing and/or\nexample purposes. — create_environment","text":"list connections schemes","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_vocabulary_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Common Data Model Vocabulary tables — create_vocabulary_tables","title":"Create the Common Data Model Vocabulary tables — create_vocabulary_tables","text":"function creates Common Data Model Standard Vocabularies Standard Concepts tables.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_vocabulary_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Common Data Model Vocabulary tables — create_vocabulary_tables","text":"","code":"create_vocabulary_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_vocabulary_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the Common Data Model Vocabulary tables — create_vocabulary_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create WebAPI tables.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_vocabulary_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Common Data Model Vocabulary tables — create_vocabulary_tables","text":"","code":"create_vocabulary_tables() #> Connecting using PostgreSQL driver #> Executing SQL took 0.0263 secs"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_webapi_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create OHDSI WebAPI tables — create_webapi_tables","title":"Create OHDSI WebAPI tables — create_webapi_tables","text":"function creates required OHDSI WebAPI tables.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_webapi_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create OHDSI WebAPI tables — create_webapi_tables","text":"","code":"create_webapi_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/create_webapi_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create OHDSI WebAPI tables — create_webapi_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified results section create WebAPI tables. WebAPI requires amstel::etl() (ETL background script) amstel::achilles() already run.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/data_quality_dashboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Shows the OHDSI Data Quality Dashboard with the most recents results — data_quality_dashboard","title":"Shows the OHDSI Data Quality Dashboard with the most recents results — data_quality_dashboard","text":"Shows log created executing DataQualityDashboard::executeDqChecks()","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/data_quality_dashboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shows the OHDSI Data Quality Dashboard with the most recents results — data_quality_dashboard","text":"","code":"data_quality_dashboard()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/download_drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads JDBC drivers — download_drivers","title":"Downloads JDBC drivers — download_drivers","text":"Downloads required JDBC drivers connecting database management system(s) specified config.yaml file.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/download_drivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads JDBC drivers — download_drivers","text":"","code":"download_drivers()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/download_drivers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloads JDBC drivers — download_drivers","text":"","code":"amstel::download_drivers() #> DatabaseConnector postgresql JDBC driver downloaded to '~/git/AMSTEL/data/jdbc_drivers'."},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_data_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop CDM Data Tables. — drop_data_tables","title":"Drop CDM Data Tables. — drop_data_tables","text":"function drops CDM tables, excluding vocabulary tables.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_data_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop CDM Data Tables. — drop_data_tables","text":"","code":"drop_data_tables(cascade = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_data_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop CDM Data Tables. — drop_data_tables","text":"cascade Automatically drop objects depend table including tables, turn objects depend objects. Default: FALSE.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_data_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop CDM Data Tables. — drop_data_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section delete Clinical Data tables Common Data Model.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_vocabulary_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Vocabulary Tables. — drop_vocabulary_tables","title":"Drop Vocabulary Tables. — drop_vocabulary_tables","text":"function drops Vocabulary tables CDM.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_vocabulary_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Vocabulary Tables. — drop_vocabulary_tables","text":"","code":"drop_vocabulary_tables(cascade = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/drop_vocabulary_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Vocabulary Tables. — drop_vocabulary_tables","text":"cascade Determines whether drop dependent objects . WARNING: Since CDM data tables depend vocabulary, delete data tables well. Default: FALSE","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/etl.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs the main ETL steps for converting AmsterdamUMCdb to the OMOP CDM — etl","title":"Runs the main ETL steps for converting AmsterdamUMCdb to the OMOP CDM — etl","text":"function executes ETL creating CDM vocabulary tables, loading vocabulary tables, indexing tables, loading source_to_concept_map, loading data tables, indexing data tables, creating example cohort tables running DataQualityDashboard checks Achilles aggregation.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/etl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs the main ETL steps for converting AmsterdamUMCdb to the OMOP CDM — etl","text":"","code":"etl(vocabulary = TRUE, mappings = TRUE, achilles = TRUE, dqd = TRUE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/etl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs the main ETL steps for converting AmsterdamUMCdb to the OMOP CDM — etl","text":"vocabulary Determines whether vocabulary tables processed. Since vocabularies change often, testing run time can reduced ignoring tables. Default: TRUE mappings Determines whether source concept mappings generated using mappings files created OHDSI Usagi. Default: TRUE achilles Determines whether OHDSI Achilles run loading data CDM generate table aggregations use WebAPI/ATLAS. Setting FALSE significantly reduce testing run time. Default: TRUE dqd Determines whether checks OHDSI DataQualityDashboard run loading data CDM. Setting FALSE significantly reduce testing run time. Default: TRUE","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/etl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Runs the main ETL steps for converting AmsterdamUMCdb to the OMOP CDM — etl","text":"function requires configured config.yaml file created using amstel::create_config(). ETL AmsterdamUMCdb based excellent well-documented ETL Sythea project available : https://github.com/OHDSI/ETL-Synthea.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/execute_dqd_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Data Quality of AmsterdamUMCdb OMOP CDM after ETL. — execute_dqd_checks","title":"Evaluate Data Quality of AmsterdamUMCdb OMOP CDM after ETL. — execute_dqd_checks","text":"function runs tests OHDSI Data Quality Dashboard. Based : https://ohdsi.github.io/DataQualityDashboard/articles/DataQualityDashboard.html","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/execute_dqd_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Data Quality of AmsterdamUMCdb OMOP CDM after ETL. — execute_dqd_checks","text":"","code":"execute_dqd_checks()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/extract_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract concepts — extract_concepts","title":"Extract concepts — extract_concepts","text":"Create source concept lists mapping OHDSI Usagi. Translates column_name English using Google Translate Cloud API matching using OHDSI Usagi. Exports tibble source_concepts folder.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/extract_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract concepts — extract_concepts","text":"","code":"extract_concepts(concepts, concept_group, force = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/extract_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract concepts — extract_concepts","text":"concepts tibble containing concepts (column name: \"source_concept\") number occurrences database (column name: \"count\") concepts. concept_group Name group concepts called extracting force Forces overwriting existing concept list. Default: FALSE.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/extract_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract concepts — extract_concepts","text":"tibble containing concepts translation","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/extract_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract concepts — extract_concepts","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union conn <- amstel::connect(\"amsterdamumcdb\") #> Connecting using PostgreSQL driver #> Executing SQL took 0.00444 secs admissions <- tbl(conn, \"admissions\") concepts <- admissions %>%   group_by(source_concept=origin) %>%   summarise(count=n()) %>%   collect() concepts <- extract_concepts(concepts, \"admissions_origin\") #> 2024-03-07 23:24:55 -- Translating text: NA characters -  #> WARNING: file already exists at:  /home/patrick/git/AMSTEL/data/source_concepts/admissions_origin.csv  #>  Concepts not extracted. Please delete the file if re-extraction is desired. concepts #> # A tibble: 16 × 3 #>    source_concept                                        count source_concept_en #>    <chr>                                                 <dbl> <chr>             #>  1 Special/Medium care zelfde ziekenhuis                   193 Special/Medium c… #>  2 NA                                                    14075 NA                #>  3 Andere locatie zelfde ziekenhuis, transport per ambu…     5 Different locati… #>  4 Verpleegafdeling ander ziekenhuis                        91 Nursing departme… #>  5 Verpleegafdeling zelfde ziekenhuis                     5027 Nursing departme… #>  6 Operatiekamer vanaf Eerste Hulp afdeling zelfde ziek…     2 Operating room f… #>  7 Recovery zelfde ziekenhuis (alleen bij niet geplande…   217 Recovery same ho… #>  8 Special/Medium care ander ziekenhuis                     19 Special/Medium c… #>  9 CCU/IC ander ziekenhuis                                 239 CCU/IC other hos… #> 10 Anders                                                   53 Otherwise         #> 11 Eerste Hulp afdeling ander ziekenhuis                   132 Emergency depart… #> 12 CCU/IC zelfde ziekenhuis                                296 CCU/IC same hosp… #> 13 Huis                                                     85 House             #> 14 Recovery ander ziekenhuis                                 6 Recovery other h… #> 15 Operatiekamer vanaf verpleegafdeling zelfde ziekenhu…     5 Operating room f… #> 16 Eerste Hulp afdeling zelfde ziekenhuis                 2661 Emergency depart…"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the configuration for working with the amstel package. Reads the\nconfig.yaml file from the user config folder or creates a new file if the\nconfiguration file is missing. — get_config","title":"Gets the configuration for working with the amstel package. Reads the\nconfig.yaml file from the user config folder or creates a new file if the\nconfiguration file is missing. — get_config","text":"Gets configuration working amstel package. Reads config.yaml file user config folder creates new file configuration file missing.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the configuration for working with the amstel package. Reads the\nconfig.yaml file from the user config folder or creates a new file if the\nconfiguration file is missing. — get_config","text":"","code":"get_config()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the configuration for working with the amstel package. Reads the\nconfig.yaml file from the user config folder or creates a new file if the\nconfiguration file is missing. — get_config","text":"list containing configuration settings","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the configuration for working with the amstel package. Reads the\nconfig.yaml file from the user config folder or creates a new file if the\nconfiguration file is missing. — get_config","text":"","code":"config <- get_config()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_server_tablename.html","id":null,"dir":"Reference","previous_headings":"","what":"Get case-sensitive table name on server — get_server_tablename","title":"Get case-sensitive table name on server — get_server_tablename","text":"Since DBMS case-sensitive use names tables currently stored database prevent creating new ones different case","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_server_tablename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get case-sensitive table name on server — get_server_tablename","text":"","code":"get_server_tablename(tablename, conn)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_server_tablename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get case-sensitive table name on server — get_server_tablename","text":"tablename Name table check conn DatabaseConnector Connection object","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_server_tablename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get case-sensitive table name on server — get_server_tablename","text":"String server table name","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/get_server_tablename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get case-sensitive table name on server — get_server_tablename","text":"","code":"conn <- connect(\"cdm\") #> Connecting using PostgreSQL driver #> Executing SQL took 0.00759 secs table <- get_server_tablename(\"PROCEDURE_OCCURRENCE\", conn) table #> [1] \"procedure_occurrence\""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_adb_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the AmsterdamUMCdb environment is available for running\nexample code — has_adb_environment","title":"Checks whether the AmsterdamUMCdb environment is available for running\nexample code — has_adb_environment","text":"Checks whether AmsterdamUMCdb environment available running example code","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_adb_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the AmsterdamUMCdb environment is available for running\nexample code — has_adb_environment","text":"","code":"has_adb_environment()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_adb_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the AmsterdamUMCdb environment is available for running\nexample code — has_adb_environment","text":"Bool","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_cdm_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the CDM environment is available for running example code — has_cdm_environment","title":"Checks whether the CDM environment is available for running example code — has_cdm_environment","text":"Checks whether CDM environment available running example code","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_cdm_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the CDM environment is available for running example code — has_cdm_environment","text":"","code":"has_cdm_environment()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_cdm_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the CDM environment is available for running example code — has_cdm_environment","text":"Bool","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_example_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether an example environment can be used — has_example_environment","title":"Checks whether an example environment can be used — has_example_environment","text":"Checks whether example environment can used","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_example_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether an example environment can be used — has_example_environment","text":"","code":"has_example_environment()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/has_example_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether an example environment can be used — has_example_environment","text":"Bool","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/index_data_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Indices on Common Data Model clinical data tables. — index_data_tables","title":"Create Indices on Common Data Model clinical data tables. — index_data_tables","text":"function creates indices clinical data tables CDM.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/index_data_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Indices on Common Data Model clinical data tables. — index_data_tables","text":"","code":"index_data_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/index_data_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Indices on Common Data Model clinical data tables. — index_data_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create indices tables Common Data Model. function assumes amstel::create_cdm_tables() amstel::load_cdm_clinical_data() run successfully.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/index_vocabulary_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Indices on Common Data Model vocabulary tables. — index_vocabulary_tables","title":"Create Indices on Common Data Model vocabulary tables. — index_vocabulary_tables","text":"function creates primary keys indices vocabulary tables CDM.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/index_vocabulary_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Indices on Common Data Model vocabulary tables. — index_vocabulary_tables","text":"","code":"index_vocabulary_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/index_vocabulary_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Indices on Common Data Model vocabulary tables. — index_vocabulary_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create indices tables Common Data Model. Since concept used often ETL AmsterdamUMCdb tables, helps (static) tables already indexed. function assumes amstel::create_cdm_tables() amstel::load_vocabulary_tables() run successfully.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load concepts — load_concepts","title":"Load concepts — load_concepts","text":"Reads (previously generated) concept list based concept group name","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load concepts — load_concepts","text":"","code":"load_concepts(concept_group)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load concepts — load_concepts","text":"concept_group concept group name used read file","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load concepts — load_concepts","text":"tibble containing concepts belonging group","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load concepts — load_concepts","text":"","code":"providers <- load_concepts(\"providers\") providers #> # A tibble: 36 × 3 #>    source_concept        count source_concept_en   #>    <chr>                 <dbl> <chr>               #>  1 ANES_Anesthesiologie 536796 ANES_Anesthesiology #>  2 APO_Apotheek            140 APO_Pharmacy        #>  3 CAR_Cardiologie           2 CAR_Cardiology      #>  4 CCH_Cardiochirurgie      72 CCH_Cardiosurgery   #>  5 Consulent              9938 Consultant          #>  6 DIET_Diëtetiek          186 DIET_Dietetics      #>  7 Externe contacten       100 External contacts   #>  8 FYS_Fysiotherapie    394760 FYS_Physiotherapy   #>  9 HEM_Hematologie        6650 HEM_Hematology      #> 10 HLK_Heelkunde         45410 HLK_Surgery         #> # ℹ 26 more rows"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_data_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Load CDM Standardized Clinical Data Tables. — load_data_tables","title":"Load CDM Standardized Clinical Data Tables. — load_data_tables","text":"function loads CDM Clinical Data tables data AmsterdamUMCdb","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_data_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load CDM Standardized Clinical Data Tables. — load_data_tables","text":"","code":"load_data_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_data_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load CDM Standardized Clinical Data Tables. — load_data_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified amsterdamumcdb cdm sections extract, transform load data AmsterdamUMCdb Common Data Model. function assumes amstel::create_cdm_tables(), amstel::load_vocabulary_tables() amstel::load_source_to_concept_map() run successfully.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_source_to_concept_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Load source_to_concept_map table from Usagi mapping Files. — load_source_to_concept_map","title":"Load source_to_concept_map table from Usagi mapping Files. — load_source_to_concept_map","text":"function loads source_to_concept_map table using mapping files created OHDSI Usagi (https://github.com/OHDSI/Usagi) application.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_source_to_concept_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load source_to_concept_map table from Usagi mapping Files. — load_source_to_concept_map","text":"","code":"load_source_to_concept_map()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_source_to_concept_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load source_to_concept_map table from Usagi mapping Files. — load_source_to_concept_map","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section load source_to_concept tables CDM reading Usagi csv files mappings folder. function assumes amstel::create_cdm_tables() amstel::load_vocabulary_tables() already run.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_source_to_concept_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load source_to_concept_map table from Usagi mapping Files. — load_source_to_concept_map","text":"","code":"stcm <- load_source_to_concept_map() #> Loading source_to_concept_map table... #> Connecting using PostgreSQL driver #> Deleting all records from table: source_to_concept_map #> Executing SQL took 0.0386 secs #> Reading vocabulary_id from concept vocabulary... #> Warning: Parameter 'progressBar' not found in SQL #> Processing Usagi mapping files... #> - admissions_gender #>   * 'AUMC Gender' for MAPS_TO mapping #> - admissions_origin #>   * 'AUMC Origin' for MAPS_TO mapping #> - admissions_destination #>   * 'AUMC Destination' for MAPS_TO mapping #> - admissions_specialty #>   * 'AUMC Specialty' for MAPS_TO mapping #> - drugitems_administeredunit #>   * 'AUMC Unit' for MAPS_TO mapping #> - drugitems_item #>   * 'AUMC Drug' for MAPS_TO mapping #>   * 'AUMC Drug Quantity' for MAPS_TO_VALUE mapping #>   * 'AUMC Drug Route' for MAPS_TO_TYPE mapping #> - drugitems_ordercategory #>   * 'AUMC Route' for MAPS_TO mapping #> - freetextitems_item #>   * 'AUMC Text' for MAPS_TO mapping #> - freetextitems_value #>   * 'AUMC Text Value' for MAPS_TO mapping #> - listitems_item #>   * 'AUMC List' for MAPS_TO mapping #> - listitems_value #>   * 'AUMC List Value' for MAPS_TO mapping #> - numericitems_lab #>   * 'AUMC Laboratory' for MAPS_TO mapping #> - numericitems_other #>   * 'AUMC Numeric' for MAPS_TO mapping #> - numericitems_tag #>   * 'AUMC Tag' for MAPS_TO mapping #> - numericitems_unit #>   * 'AUMC Unit' for MAPS_TO mapping #> - procedureorderitems_item #>   * 'AUMC Procedure Order' for MAPS_TO mapping #>   * 'AUMC Qualifier' for MAPS_TO_TYPE mapping #> - processitems_item #>   * 'AUMC Process' for MAPS_TO mapping #>   * 'AUMC Anatomic Site' for MAPS_TO_VALUE mapping #>   * 'AUMC Quantity' for MAPS_TO_NUMBER mapping #> - providers #>   * 'AUMC Provider' for MAPS_TO mapping #> - reason_for_admission #>   * 'AUMC Diagnosis' for MAPS_TO mapping #> - specimen_source #>   * 'AUMC Specimen Source' for MAPS_TO mapping #> Saving source_to_concept_map.csv in mappings folder... #> Loading mapping records into table: source_to_concept_map #> Inserting data took 1.05 secs #> Success: source_to_concept_map loaded. stcm #> # A tibble: 5,058 × 9 #>    source_code     source_concept_id source_vocabulary_id source_code_descript…¹ #>    <chr>                       <dbl> <chr>                <chr>                  #>  1 Vrouw                           0 AUMC Gender          Vrouw                  #>  2 Man                             0 AUMC Gender          Man                    #>  3 Huis                            0 AUMC Origin          Huis                   #>  4 CCU/IC zelfde …                 0 AUMC Origin          CCU/IC zelfde ziekenh… #>  5 Eerste Hulp af…                 0 AUMC Origin          Eerste Hulp afdeling … #>  6 Recovery ander…                 0 AUMC Origin          Recovery ander zieken… #>  7 Eerste Hulp af…                 0 AUMC Origin          Eerste Hulp afdeling … #>  8 Operatiekamer …                 0 AUMC Origin          Operatiekamer vanaf v… #>  9 Special/Medium…                 0 AUMC Origin          Special/Medium care a… #> 10 Operatiekamer …                 0 AUMC Origin          Operatiekamer vanaf E… #> # ℹ 5,048 more rows #> # ℹ abbreviated name: ¹​source_code_description #> # ℹ 5 more variables: target_concept_id <dbl>, target_vocabulary_id <chr>, #> #   valid_start_date <date>, valid_end_date <date>, invalid_reason <lgl>"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_usagi_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Usagi Concepts — load_usagi_concepts","title":"Load Usagi Concepts — load_usagi_concepts","text":"Reads (partially mapped) concept list based concept group name. function assumes mapped concept list stored data/mappings folder.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_usagi_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Usagi Concepts — load_usagi_concepts","text":"","code":"load_usagi_concepts(concept_group)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_usagi_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Usagi Concepts — load_usagi_concepts","text":"concept_group concept group name used read file","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_usagi_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Usagi Concepts — load_usagi_concepts","text":"tibble containing concepts belonging group","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_usagi_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Usagi Concepts — load_usagi_concepts","text":"","code":"providers <- load_usagi_concepts(\"providers\") providers #> # A tibble: 36 × 17 #>    sourceCode       sourceName sourceFrequency sourceAutoAssignedCo…¹ matchScore #>    <chr>            <chr>                <dbl> <lgl>                       <dbl> #>  1 NEU_Neurologie   NEU_Neuro…           73175 NA                           0.37 #>  2 NCH_Neurochirur… NCH_Neuro…            6304 NA                           0.46 #>  3 Technisch        Technical            29411 NA                           0.71 #>  4 DIET_Diëtetiek   DIET_Diet…             186 NA                           0.2  #>  5 KNF_Klinische n… KNF_Clini…              98 NA                           0.5  #>  6 ICV_Coassistent  ICV_Coass…           85081 NA                           0.22 #>  7 OOG_Oogheelkunde EYE_Ophth…              22 NA                           0.48 #>  8 MMI_Medische mi… MMI_Medic…           99140 NA                           0.41 #>  9 Consulent        Consultant            9938 NA                           0.81 #> 10 NEF_Nefrologie   NEF_Nephr…              70 NA                           0.4  #> # ℹ 26 more rows #> # ℹ abbreviated name: ¹​sourceAutoAssignedConceptIds #> # ℹ 12 more variables: mappingStatus <chr>, equivalence <chr>, #> #   statusSetBy <chr>, statusSetOn <dbl>, conceptId <dbl>, conceptName <chr>, #> #   domainId <chr>, mappingType <chr>, comment <lgl>, createdBy <chr>, #> #   createdOn <dbl>, assignedReviewer <lgl>"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_vocabulary_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Vocabulary Tables From CSV Files. — load_vocabulary_tables","title":"Load Vocabulary Tables From CSV Files. — load_vocabulary_tables","text":"function loads vocabulary tables csv files downloaded OHDSI Athena (https://athena.ohdsi.org/vocabulary/list).","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_vocabulary_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Vocabulary Tables From CSV Files. — load_vocabulary_tables","text":"","code":"load_vocabulary_tables()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/load_vocabulary_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Vocabulary Tables From CSV Files. — load_vocabulary_tables","text":"function requires configured config.yaml file created using amstel::create_config(). use connection configuration specified cdm section create Vocabulary tables CDM reading vocabulary csv files downloaded Athena path specified data section. function assumes amstel::create_cdm_tables() already run.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/read_vocabulary.html","id":null,"dir":"Reference","previous_headings":"","what":"Read vocabulary — read_vocabulary","title":"Read vocabulary — read_vocabulary","text":"Reads vocabulary one csv files Vocabulary path ( Default: data/vocabulary). file exist, show available csv files folder.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/read_vocabulary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read vocabulary — read_vocabulary","text":"","code":"read_vocabulary(vocabulary)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/read_vocabulary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read vocabulary — read_vocabulary","text":"vocabulary Vocabulary name, either name vocabulary table name file. Case-insensitive.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/read_vocabulary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read vocabulary — read_vocabulary","text":"Tibble containing data one vocabulary files","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/read_vocabulary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read vocabulary — read_vocabulary","text":"","code":"concept <- read_vocabulary(\"concept\") concept #> # A tibble: 5,864,821 × 10 #>    concept_id concept_name              domain_id vocabulary_id concept_class_id #>         <dbl> <chr>                     <chr>     <chr>         <chr>            #>  1   45756805 Pediatric Cardiology      Provider  ABMS          Physician Speci… #>  2   45756804 Pediatric Anesthesiology  Provider  ABMS          Physician Speci… #>  3   45756803 Pathology-Anatomic / Pat… Provider  ABMS          Physician Speci… #>  4   45756802 Pathology - Pediatric     Provider  ABMS          Physician Speci… #>  5   45756801 Pathology - Molecular Ge… Provider  ABMS          Physician Speci… #>  6   45756800 Microbiology              Provider  ABMS          Physician Speci… #>  7   45756799 Pathology - Hematology    Provider  ABMS          Physician Speci… #>  8   45756798 Pathology - Forensic      Provider  ABMS          Physician Speci… #>  9   45756797 Pathology - Clinical      Provider  ABMS          Physician Speci… #> 10   45756796 Pathology - Chemical      Provider  ABMS          Physician Speci… #> # ℹ 5,864,811 more rows #> # ℹ 5 more variables: standard_concept <chr>, concept_code <chr>, #> #   valid_start_date <dbl>, valid_end_date <dbl>, invalid_reason <chr>"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/save_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Concepts — save_concepts","title":"Save Concepts — save_concepts","text":"Saves concepts list source_concepts folder","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/save_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Concepts — save_concepts","text":"","code":"save_concepts(concepts, concept_group, force = FALSE)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/save_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Concepts — save_concepts","text":"concepts tibble containing concepts concept_group concept group name used create file name force forces overwriting file. WARNING: may delete already mapped concepts","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/save_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Concepts — save_concepts","text":"(unmodified) tibble containing concepts","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/save_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Concepts — save_concepts","text":"","code":"library(dplyr) conn <- amstel::connect(\"amsterdamumcdb\") #> Connecting using PostgreSQL driver #> Executing SQL took 0.00667 secs admissions <- tbl(conn, \"admissions\") concepts <- admissions %>%   group_by(source_concept=origin) %>%   summarise(count=n()) %>%   collect() concepts <- save_concepts(concepts, \"admissions_origin\") #> WARNING: file already exists at:  /home/patrick/git/AMSTEL/data/source_concepts/admissions_origin.csv  #>  Concepts not extracted. Please delete the file if re-extraction is desired. concepts #> # A tibble: 16 × 2 #>    source_concept                                                  count #>    <chr>                                                           <dbl> #>  1 Special/Medium care zelfde ziekenhuis                             193 #>  2 NA                                                              14075 #>  3 Andere locatie zelfde ziekenhuis, transport per ambulance           5 #>  4 Verpleegafdeling ander ziekenhuis                                  91 #>  5 Verpleegafdeling zelfde ziekenhuis                               5027 #>  6 Operatiekamer vanaf Eerste Hulp afdeling zelfde ziekenhuis          2 #>  7 Recovery zelfde ziekenhuis (alleen bij niet geplande IC-opname)   217 #>  8 Special/Medium care ander ziekenhuis                               19 #>  9 CCU/IC ander ziekenhuis                                           239 #> 10 Anders                                                             53 #> 11 Eerste Hulp afdeling ander ziekenhuis                             132 #> 12 CCU/IC zelfde ziekenhuis                                          296 #> 13 Huis                                                               85 #> 14 Recovery ander ziekenhuis                                           6 #> 15 Operatiekamer vanaf verpleegafdeling zelfde ziekenhuis              5 #> 16 Eerste Hulp afdeling zelfde ziekenhuis                           2661"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/show_dqd_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Data Quality Dashboard log (Shiny App) — show_dqd_log","title":"Show Data Quality Dashboard log (Shiny App) — show_dqd_log","text":"Shows log created executing DataQualityDashboard::executeDqChecks()","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/show_dqd_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Data Quality Dashboard log (Shiny App) — show_dqd_log","text":"","code":"show_dqd_log()"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/swap_usagi_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap counts — swap_usagi_counts","title":"Swap counts — swap_usagi_counts","text":"Swaps sourceFrequency counts/counts_validated columns allow correct sorting OHDSI Usagi. mainly used help prioritizing mapping (manually) validated values vs -validated (device) data.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/swap_usagi_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap counts — swap_usagi_counts","text":"","code":"swap_usagi_counts(concept_group)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/swap_usagi_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap counts — swap_usagi_counts","text":"concept_group concept group name used read file","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/swap_usagi_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap counts — swap_usagi_counts","text":"tibble containing usagi mappings counts swapped","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/swap_usagi_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap counts — swap_usagi_counts","text":"","code":"swapped <- swap_usagi_counts(\"numericitems_other\") swapped #> # A tibble: 738 × 31 #>    sourceCode sourceName                  sourceFrequency sourceAutoAssignedCo…¹ #>         <dbl> <chr>                                 <dbl> <lgl>                  #>  1      16612 MCA_ABPm                                  6 NA                     #>  2      20655 ECMO - Tven                             465 NA                     #>  3      19499 NICE Apache II Score                   2393 NA                     #>  4      20656 ECMO - FiO2                             478 NA                     #>  5      20656 ECMO - FiO2                             478 NA                     #>  6      16613 MCA_Respiratory Rate                     29 NA                     #>  7      12322 respiratory rate setting                 69 NA                     #>  8      20657 ECMO - Gas flow                         476 NA                     #>  9      16624 MCA_Apache_Score                       1898 NA                     #> 10      19331 Physio Mobility Shoulder a…            1993 NA                     #> # ℹ 728 more rows #> # ℹ abbreviated name: ¹​sourceAutoAssignedConceptIds #> # ℹ 27 more variables: `ADD_INFO:count_validated` <dbl>, #> #   `ADD_INFO:vocabulary_id` <chr>, `ADD_INFO:vocabulary_concept_code` <chr>, #> #   `ADD_INFO:vocabulary_concept_name` <chr>, `ADD_INFO:source_concept` <chr>, #> #   `ADD_INFO:abbreviation` <chr>, `ADD_INFO:category` <chr>, #> #   `ADD_INFO:unitid` <dbl>, `ADD_INFO:unit` <chr>, …"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Small wrapper for translating using googleLanguageR. — translate","title":"Small wrapper for translating using googleLanguageR. — translate","text":"Small wrapper translating using googleLanguageR.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small wrapper for translating using googleLanguageR. — translate","text":"","code":"translate(text, source = \"nl\", target = \"en\")"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Small wrapper for translating using googleLanguageR. — translate","text":"text Character vector translate source Source language using two letter code. target Target language using two letter code. Default: 'en' English","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small wrapper for translating using googleLanguageR. — translate","text":"translated character vector","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small wrapper for translating using googleLanguageR. — translate","text":"","code":"translation <- translate(\"Mooi weer is het vandaag\") #> 2024-03-07 23:26:14 -- Translating text: 24 characters -"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate concepts — translate_concepts","title":"Translate concepts — translate_concepts","text":"Translates column_name English using Google Translate Cloud API matching using OHDSI Usagi.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate concepts — translate_concepts","text":"","code":"translate_concepts(concepts)"},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate concepts — translate_concepts","text":"concepts tibble containing concepts (column name: \"source_concept\") number occurrences database (column name: \"count\") concepts.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate concepts — translate_concepts","text":"tibble containing concepts translation","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/reference/translate_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate concepts — translate_concepts","text":"","code":"has_adb_environment() #> Connecting using PostgreSQL driver #> Executing SQL took 0.0045 secs #> [1] TRUE library(dplyr) conn <- amstel::connect(\"amsterdamumcdb\") #> Connecting using PostgreSQL driver #> Executing SQL took 0.00695 secs admissions <- tbl(conn, \"admissions\") concepts <- admissions %>% group_by(source_concept=origin) %>% summarise(count=n()) %>% collect() concepts <- translate_concepts(concepts) #> 2024-03-07 23:26:15 -- Translating text: NA characters -  concepts #> # A tibble: 16 × 3 #>    source_concept                                        count source_concept_en #>    <chr>                                                 <dbl> <chr>             #>  1 Special/Medium care zelfde ziekenhuis                   193 Special/Medium c… #>  2 NA                                                    14075 NA                #>  3 Andere locatie zelfde ziekenhuis, transport per ambu…     5 Different locati… #>  4 Verpleegafdeling ander ziekenhuis                        91 Nursing departme… #>  5 Verpleegafdeling zelfde ziekenhuis                     5027 Nursing departme… #>  6 Operatiekamer vanaf Eerste Hulp afdeling zelfde ziek…     2 Operating room f… #>  7 Recovery zelfde ziekenhuis (alleen bij niet geplande…   217 Recovery same ho… #>  8 Special/Medium care ander ziekenhuis                     19 Special/Medium c… #>  9 CCU/IC ander ziekenhuis                                 239 CCU/IC other hos… #> 10 Anders                                                   53 Otherwise         #> 11 Eerste Hulp afdeling ander ziekenhuis                   132 Emergency depart… #> 12 CCU/IC zelfde ziekenhuis                                296 CCU/IC same hosp… #> 13 Huis                                                     85 House             #> 14 Recovery ander ziekenhuis                                 6 Recovery other h… #> 15 Operatiekamer vanaf verpleegafdeling zelfde ziekenhu…     5 Operating room f… #> 16 Eerste Hulp afdeling zelfde ziekenhuis                 2661 Emergency depart…"},{"path":[]},{"path":"https://amsterdamumc.github.io/AMSTEL/news/index.html","id":"milestone-0-9-0","dir":"Changelog","previous_headings":"","what":"Milestone 2","title":"amstel 0.9.0","text":"Pre-release version released EHDEN Milestone 2.","code":""},{"path":"https://amsterdamumc.github.io/AMSTEL/news/index.html","id":"improved-documentation-0-9-0","dir":"Changelog","previous_headings":"","what":"Improved documentation","title":"amstel 0.9.0","text":"Added pkgdown documentation Examples Hide output used non-interactively (e.g. progress bars)","code":""}]
